{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Navigation/Toolbar/Toolbar.module.css","assests/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Auxi.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","auxi","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","href","link","active","navigationItems","NavigationItems","toolbar","Toolbar","layout","Auxi","Content","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Component","burger","transfromedIngredients","Object","keys","map","igkey","Array","_","i","key","reduce","arr","el","concat","console","log","length","Burger","buildControl","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","backdrop","show","Backdrop","clicked","modal","modalClosed","Modal","style","transform","opacity","button","Button","btnType","join","orderSummary","ingredientSummary","igKey","textTransform","totalPrice","purchaseCancelled","purchaseContinue","INGREDIENT_PRICE","salad","bacon","cheese","meat","BurgerBuilder","purchaseHandler","setState","purchasing","purchasingCancelHandler","purchasingContinueHandler","alert","addIngredientHandler","updateCount","state","updateIngredient","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","sum","disabledInfo","OrderSummary","App","Layout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77d151ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1OTAx\",\"BreadTop\":\"BurgerIngredient_BreadTop__1X6RD\",\"Seeds1\":\"BurgerIngredient_Seeds1__FCUpg\",\"Seeds2\":\"BurgerIngredient_Seeds2__31W_D\",\"Meat\":\"BurgerIngredient_Meat__1CO4i\",\"Cheese\":\"BurgerIngredient_Cheese__2pfTH\",\"Salad\":\"BurgerIngredient_Salad__28N3O\",\"Bacon\":\"BurgerIngredient_Bacon__3dZcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3EmQw\",\"Label\":\"BuildControl_Label__1FKig\",\"Less\":\"BuildControl_Less__1B7oP\",\"More\":\"BuildControl_More__2YHnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2tJRt\",\"active\":\"NavigationItem_active__2apWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__kpiy2\",\"OrderButton\":\"BuildControls_OrderButton__2fvru\",\"enable\":\"BuildControls_enable__3GSjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__LChOP\",\"Success\":\"Button_Success__33EwL\",\"Danger\":\"Button_Danger__17d1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2kE4-\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__NZowW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1AsL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3C7AV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1TFuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2wuPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__31PKa\"};","const auxi = (props) => props.children;\r\n\r\nexport default auxi;","import React from 'react';\r\nimport burgerLogo from '../../assests/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <a href={props.link} className={props.active ? classes.active : null}>\r\n            {props.children}\r\n        </a>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" active>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/\">Checkout</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <div>Menu</div>\r\n        <Logo />\r\n        <nav>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Auxi from '../../hoc/Auxi';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.css';\r\n\r\nconst layout = (props) => (\r\n    <Auxi>\r\n        <Toolbar />\r\n        <main className={classes.Content}>\r\n            {props.children}\r\n        </main>\r\n    </Auxi>\r\n);\r\n\r\n\r\n\r\nexport default layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n\r\n        }\r\n        return ingredient;\r\n    }\r\n\r\n}\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) => {\r\n    let transfromedIngredients = Object.keys(props.ingredient)\r\n        .map(igkey => {\r\n            return [...Array(props.ingredient[igkey])].map((_, i) => {\r\n                return <BurgerIngredient key={igkey + i} type={igkey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n\r\n    console.log(transfromedIngredients);\r\n    if (transfromedIngredients.length === 0) {\r\n        transfromedIngredients = <p>Please add some ingredient...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transfromedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                type={ctrl.type}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}\r\n            >\r\n            ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Auxi from '../../../hoc/Auxi';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n    <Auxi>\r\n        <Backdrop show={props.show} clicked={props.modalClosed} />\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    </Auxi>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')} onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Auxi from '../../../hoc/Auxi';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredient)\r\n        .map(igKey => {\r\n            return (\r\n                <li key={igKey}>\r\n                    <span style={{ textTransform: 'captitalize' }}>{igKey}</span>:{props.ingredient[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n    return (\r\n        <Auxi>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.totalPrice.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}> Continue </Button>\r\n\r\n        </Auxi>\r\n    );\r\n};\r\nexport default orderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Auxi from '../../hoc/Auxi';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuiltControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nconst INGREDIENT_PRICE = {\r\n    salad: 0.5,\r\n    bacon: 0.4,\r\n    cheese: 1.3,\r\n    meat: 0.7\r\n}\r\nclass BurgerBuilder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ingredient: {\r\n                salad: 0,\r\n                bacon: 0,\r\n                cheese: 0,\r\n                meat: 0\r\n            },\r\n            totalPrice: 4.0,\r\n            purchasable: false,\r\n            purchasing: false\r\n        }\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({\r\n            purchasing: true\r\n        });\r\n    }\r\n\r\n    purchasingCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        })\r\n    }\r\n\r\n    purchasingContinueHandler = () => {\r\n        alert('continue!!');\r\n    }\r\n\r\n    updatePurchaseState(ingredient) {\r\n        const sum = Object.keys(ingredient)\r\n            .map(igKey => {\r\n                return ingredient[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({\r\n            purchasable: sum > 0\r\n        });\r\n    }\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredient[type];\r\n        const updateCount = oldCount + 1;\r\n        const updateIngredient = { ...this.state.ingredient };\r\n        updateIngredient[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICE[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = priceAddition + oldPrice;\r\n        this.setState({\r\n            ingredient: updateIngredient,\r\n            totalPrice: newPrice\r\n        });\r\n        this.updatePurchaseState(updateIngredient);\r\n    }\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredient[type];\r\n        if (oldCount <= 0)\r\n            return;\r\n        const updateCount = oldCount - 1;\r\n        const updateIngredient = { ...this.state.ingredient };\r\n        updateIngredient[type] = updateCount;\r\n        const priceDeduction = INGREDIENT_PRICE[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({\r\n            ingredient: updateIngredient,\r\n            totalPrice: newPrice\r\n        });\r\n        this.updatePurchaseState(updateIngredient);\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = { ...this.state.ingredient };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return (\r\n            <Auxi>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchasingCancelHandler}>\r\n                    <OrderSummary\r\n                        ingredient={this.state.ingredient}\r\n                        purchaseCancelled={this.purchasingCancelHandler}\r\n                        purchaseContinue={this.purchasingContinueHandler}\r\n                        totalPrice={this.state.totalPrice}\r\n                    />\r\n                </Modal>\r\n                <Burger ingredient={this.state.ingredient} />\r\n                <BuiltControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    purchasable={this.state.purchasable}\r\n                    ordered={this.purchaseHandler}\r\n                />\r\n            </Auxi>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div >\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}